{
    "contents" : "#Reading data source in csv format. read into data frame.\n\nfeature_names <- read.table(\"UCI HAR Dataset/features.txt\")\nactivity_labels <- read.table(\"UCI HAR Dataset/activity_labels.txt\", header = FALSE)\nsubject_train <- read.table(\"UCI HAR Dataset/train/subject_train.txt\", header = FALSE)\nactivity_train <- read.table(\"UCI HAR Dataset/train/y_train.txt\", header = FALSE)\nfeatures_train <- read.table(\"UCI HAR Dataset/train/X_train.txt\", header = FALSE)\nsubject_test <- read.table(\"UCI HAR Dataset/test/subject_test.txt\", header = FALSE)\nactivity_test <- read.table(\"UCI HAR Dataset/test/y_test.txt\", header = FALSE)\nfeatures_test <- read.table(\"UCI HAR Dataset/test/X_test.txt\", header = FALSE)\n\n#merging the subject, activity and features from train and test datasets\n#subject\nsubject <- rbind(subject_train, subject_test)   \n\n#activity \nactivity <- rbind(activity_train, activity_test)\n\n#features\nfeatures <- rbind(features_train, features_test)\n\n#naming the columns in feature data set.\ncolnames(features) <- t(feature_names[2])\n\n#naming the Activity and Subject column\ncolnames(activity) <- \"Activity\"\ncolnames(subject) <- \"Subject\"\n\n#Part 1: Merges the training and the test sets to create one data set.\nfull_set_data <- cbind(subject, activity,features)\n\n#Match and filter the column indices with name for mean or standard deviation\nmean_std_column <- grep(\".*mean.*|.*std.*\", names(full_set_data))\n\n#get require column, subject, activity and columns with mean or standard deviation\nrequired_column <- c( 1, 2, mean_std_column)\n\n#Part 2: Extracts only the measurements on the mean and standard deviation for each measurement.\n#extract require data\nrequired_data <- full_set_data[,required_column]\nwrite.table(required_data, file = \"required_data.txt\", row.names = FALSE)\n\n#get activity column\nrequired_data$Activity <- as.character(required_data$Activity)\n\n#Part 3: Uses descriptive activity names to name the activities in the data set\n#loop all data, match same activity and replace with activity label\nfor (i in 1:6){\n        required_data$Activity[required_data$Activity == i] <- as.character(activity_labels[i,2])\n}\n\n#Part 4: Appropriately labels the data set with descriptive variable names.\n#Change column name to better naming.\n\nnames(required_data)<-gsub(\"Acc\", \"Accelerometer\", names(required_data))\nnames(required_data)<-gsub(\"Gyro\", \"Gyroscope\", names(required_data))\nnames(required_data)<-gsub(\"BodyBody\", \"Body\", names(required_data))\nnames(required_data)<-gsub(\"Mag\", \"Magnitude\", names(required_data))\nnames(required_data)<-gsub(\"^t\", \"Time\", names(required_data))\nnames(required_data)<-gsub(\"^f\", \"Frequency\", names(required_data))\nnames(required_data)<-gsub(\"tBody\", \"TimeBody\", names(required_data))\nnames(required_data)<-gsub(\"-mean()\", \"Mean\", names(required_data))\nnames(required_data)<-gsub(\"-std()\", \"STD\", names(required_data))\nnames(required_data)<-gsub(\"-freq()\", \"Frequency\", names(required_data))\nnames(required_data)<-gsub(\"angle\", \"Angle\", names(required_data))\nnames(required_data)<-gsub(\"gravity\", \"Gravity\", names(required_data))\n\n#Part 5: From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.\n\n#Factor data Subject and Activity for Grouping \nrequired_data$Subject <- as.factor(required_data$Subject)\nrequired_data$Activity <- as.factor(required_data$Activity)\n\n\n#aggregation\n\ntidy_data <- suppressWarnings(aggregate(required_data,\n                                       list(Activity = required_data$Activity, Subject = required_data$Subject), mean))\n\ntidy_data <- tidy_data[-c(3:4)]       #drop the NA columns\nwrite.table(tidy_data, \"tidy_data.txt\", row.names = FALSE) # write out the 2nd dataset\n",
    "created" : 1434807519098.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2881427800",
    "id" : "EA0054C5",
    "lastKnownWriteTime" : 1434812830,
    "path" : "~/Coursera/coursera/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}